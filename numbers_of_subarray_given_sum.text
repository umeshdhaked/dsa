// find number of subarrays in an array that's sums adds up to given value K.

    public static int subarraySum(int[] nums, int k) {
        int count = 0;
        int currSum = 0;
        Map<Integer, Integer> sumMap = new HashMap<>();
        
        for (int i = 0; i < nums.length; i++) {
            currSum = currSum + nums[i];
            
            if (currSum == k) {
                count++;
            }

            if (sumMap.containsKey(currSum - k)) {
                count = count + sumMap.get(currSum - k);
            }

            if (!sumMap.containsKey(currSum)) {
                sumMap.put(currSum, 1);
            } else {
                sumMap.put(currSum, sumMap.get(currSum) + 1);
            }

        }

        return count;